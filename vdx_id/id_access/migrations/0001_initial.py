# Generated by Django 2.2.10 on 2020-11-23 15:02

import datetime
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_fsm


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessGroupMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
                ('membership_expiry', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccessItemMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('embedded_access', models.BooleanField(default=False, help_text='True if access item is embedded to identity. (e.g. default group for unix user)')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ViAccessGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=255)),
                ('description', models.TextField(default='')),
                ('available', models.BooleanField(default=True, help_text='Only available groups can be requested')),
                ('rule_list', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, help_text='List of rules to apply')),
                ('membership_autoexpiry', models.DurationField(default=datetime.timedelta(30))),
                ('stored_access_state', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
            ],
            bases=(models.Model,)
        ),
        migrations.CreateModel(
            name='ViAccessGroupChangeRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actioned', models.BooleanField(default=False)),
                ('state', django_fsm.FSMField(choices=[('pending', 'pending'), ('approved', 'approved'), ('rejected', 'rejected'), ('completed', 'completed')], default='pending', max_length=50, protected=True, verbose_name='AccessGroup Change State')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('description', models.TextField()),
                ('notes', models.TextField()),
                ('priority', models.PositiveSmallIntegerField(default=0, help_text='Higher number for higher priority')),
                ('access_groups_add', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list)),
                ('access_items_add', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list)),
                ('access_groups_remove', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list)),
                ('access_items_remove', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list)),
            ],
            options={
                'verbose_name': 'Access-Group Change Request',
                'verbose_name_plural': 'Access-Group Change Requests',
            },
        ),
        migrations.CreateModel(
            name='ViAccessGroupRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processing', models.BooleanField(default=True)),
                ('state', django_fsm.FSMField(choices=[('initialized', 'initialized'), ('authorization_rejected', 'authorization_rejected'), ('authorization_requested', 'authorization_requested'), ('authorization_pending', 'authorization_pending'), ('member', 'member'), ('removed', 'removed')], default='initialized', max_length=50, verbose_name='Group Request State')),
                ('target_state', django_fsm.FSMField(choices=[('member', 'member'), ('removed', 'removed')], default='member', max_length=50, verbose_name='Target State')),
                ('authorization_state', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('access_duration', models.DurationField(blank=True, help_text='If > 0, will automatically revoke access once duration elapsed.Will inherit AccessGroup duration if None. Child memberships will inherit this duration.', null=True)),
                ('justification', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Access-Group Request',
                'verbose_name_plural': 'Access-Group Requests',
            },
        ),
        migrations.CreateModel(
            name='ViAccessItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=255)),
                ('available', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('properties', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('description', models.TextField(blank=True, null=True)),
                ('collection_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('collection_data_variance', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['identifier'],
            },
        ),
        migrations.CreateModel(
            name='ViAccessItemRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processing', models.BooleanField(default=True)),
                ('state', django_fsm.FSMField(choices=[('initialized', 'initialized'), ('account_pending', 'account_pending'), ('account_present', 'account_present'), ('membership_requested', 'membership_requested'), ('member', 'member'), ('pending_removal', 'pending_removal'), ('removed', 'removed'), ('removal_requested', 'removal_requested')], default='initialized', max_length=50, verbose_name='Current Access_item State')),
                ('target_state', django_fsm.FSMField(choices=[('member', 'member'), ('removed', 'removed')], default='member', max_length=50, verbose_name='Target Access_item State')),
                ('access_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='access_item_requests', to='id_access.ViAccessItem')),
            ],
            options={
                'verbose_name': 'Access-Item Request',
                'verbose_name_plural': 'Access-Item Requests',
            },
        ),
    ]
